function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    precompile(Tuple{Core.kwftype(typeof(AcuteML.render2file)),NamedTuple{(:id, :age, :field, :GPA, :courses),Tuple{Int64,Int64,String,Float64,Array{String,1}}},typeof(render2file),String,Bool})
    precompile(Tuple{typeof(AcuteML.amlCreate),Expr,Array{Union{Expr, Symbol},1},Array{Any,1},Array{Union{Missing, Expr, Symbol, Type},1},Array{Union{Expr, Symbol},1},Array{Union{Missing, String},1},Array{Union{Missing, Function, Symbol},1},Array{Int64,1},String,String,Array{Union{Missing, Function, Symbol},0},Bool,Symbol})
    precompile(Tuple{typeof(AcuteML.amlParse),Expr})
    precompile(Tuple{typeof(AcuteML.multiString),Array{String,1}})
    precompile(Tuple{typeof(AcuteML.multiString),Float64})
    precompile(Tuple{typeof(AcuteML.multiString),Int64})
    precompile(Tuple{typeof(AcuteML.multiString),String})
    precompile(Tuple{typeof(addelementOne!),Document,String,Nothing,Int64})
    precompile(Tuple{typeof(addelementOne!),Document,String,String,Int64})
    precompile(Tuple{typeof(addelementOne!),Node,String,Nothing,Int64})
    precompile(Tuple{typeof(addelementOne!),Node,String,String,Int64})
    precompile(Tuple{typeof(addelementVect!),Document,String,Array{Any,1},Int64})
    precompile(Tuple{typeof(addelementVect!),Document,String,Array{Float64,1},Int64})
    precompile(Tuple{typeof(addelementVect!),Document,String,Array{Int64,1},Int64})
    precompile(Tuple{typeof(addelementVect!),Document,String,Array{String,1},Int64})
    precompile(Tuple{typeof(addelementVect!),Node,String,Array{Any,1},Int64})
    precompile(Tuple{typeof(addelementVect!),Node,String,Array{Float64,1},Int64})
    precompile(Tuple{typeof(addelementVect!),Node,String,Array{Int64,1},Int64})
    precompile(Tuple{typeof(addelementVect!),Node,String,Array{String,1},Int64})
    precompile(Tuple{typeof(docOrElmInit),String,String})
    precompile(Tuple{typeof(docOrElmInit),String,String})
    precompile(Tuple{typeof(findallcontent),Type{Array{Any,1}},String,Document,Int64})
    precompile(Tuple{typeof(findallcontent),Type{Array{Any,1}},String,Node,Int64})
    precompile(Tuple{typeof(findallcontent),Type{Array{Float64,1}},String,Document,Int64})
    precompile(Tuple{typeof(findallcontent),Type{Array{Float64,1}},String,Node,Int64})
    precompile(Tuple{typeof(findallcontent),Type{Array{Int64,1}},String,Document,Int64})
    precompile(Tuple{typeof(findallcontent),Type{Array{Int64,1}},String,Node,Int64})
    precompile(Tuple{typeof(findallcontent),Type{Array{String,1}},String,Document,Int64})
    precompile(Tuple{typeof(findallcontent),Type{Array{String,1}},String,Node,Int64})
    precompile(Tuple{typeof(findfirstcontent),String,Document,Int64})
    precompile(Tuple{typeof(findfirstcontent),String,Node,Int64})
    precompile(Tuple{typeof(findfirstcontent),Type{Nothing},String,Document,Int64})
    precompile(Tuple{typeof(findfirstcontent),Type{Nothing},String,Node,Int64})
    precompile(Tuple{typeof(findfirstcontent),Type{String},String,Document,Int64})
    precompile(Tuple{typeof(findfirstcontent),Type{String},String,Node,Int64})
    precompile(Tuple{typeof(findfirstcontent),Type{Union{Nothing, String}},String,Document,Int64})
    precompile(Tuple{typeof(findfirstcontent),Type{Union{Nothing, String}},String,Node,Int64})
    precompile(Tuple{typeof(newTemplate),String,Symbol})
    precompile(Tuple{typeof(newTemplate),String})
end
